---
import type { CollectionEntry } from "astro:content";
import { Icon } from "astro-icon/components";
import Card from "@/components/Card.astro";
import Paragraph from "@/components/Paragraph.astro";

interface Props {
  data: CollectionEntry<"history">["data"][number];
}

const { data } = Astro.props;

---

<section class="timeline-item">
  <div class="timeline-item-date">{ data.date }</div>
  <div class="timeline-item-icon">
    <Icon name={data.icon} />
  </div>
  <Card class="timeline-item-content">
    <h3 class="timeline-item-title">
      {data.link ? (
        <a href={data.link} target="_blank" rel="noopener noreferrer">
          { data.title }
          <Icon class="external-link" name="fluent:open-16-filled" />
        </a>
      ) : (
        data.title
      )}
    </h3>
    {data.description && (
      <Paragraph class="timeline-item-description">{data.description}</Paragraph>
    )}
  </Card>
</section>

<style lang="scss">
  @use "@/assets/styles/variables" as var;

  .timeline-item {
    display: grid;
    align-items:center;
    column-gap: 1rem;
    z-index: 1;

    grid-template:
      "icon date" auto
      "_l content" auto / var.$timeline-icon-width 1fr;

    @media screen and (width >= var.$breakpoint-lg) {
      grid-template:
        "_ icon date" auto
        "_ _l content" auto / 1fr var.$timeline-icon-width 1fr;

      &:nth-of-type(even) {
        grid-template:
        "date icon _" auto
        "content _l _" auto / 1fr var.$timeline-icon-width 1fr;

        .timeline-item-date {
          text-align: right;
        }
      }
    }
  }

  .timeline-item-date {
    grid-area: date;
    color: var.$color-text-primary;
    font-weight: bold;
  }

  .timeline-item-icon {
    grid-area: icon;
    background-color: var.$color-primary-700;
    border-radius: 50%;
    width: var.$timeline-icon-width;
    height: var.$timeline-icon-width;
    display: grid;
    place-items: center;
    border: 4px solid var.$color-white;
    color: var.$color-white;
    box-shadow: var.$shadow-md;

    svg {
      width: 50%;
      height: 50%;
    }
  }

  .timeline-item-content {
    grid-area: content;

    &:hover .timeline-item-title a {
      text-decoration-color: var.$color-text-link;

      &:hover {
        color: var.$color-text-link-hover;
        text-decoration-color: var.$color-text-link-hover;
      }

      .external-link {
        opacity: 1;
      }
    }

    .timeline-item-title {
      font-size: 1.25rem;
      color: var.$color-text-primary;
      font-weight: bold;

      a {
        color: inherit;
        text-decoration-color: transparent;
        transition: color 0.1s ease-in-out, text-decoration-color 0.1s ease-in-out;

        .external-link {
          opacity: 0;
          transition: opacity 0.1s ease-in-out;
          transform: translateY(2px);
        }
      }

      &:has(+ .timeline-item-description) {
        margin-bottom: 0.5rem;
      }
    }
  }
</style>
